version: '3'

services:
  app:
    image: my-app:resolved-dependencies
    command: /bin/bash
    volumes:
      - .:/var/local/my-app
    stdin_open: true
    tty: true
    links:
      - redis
      - mongo
      - elasticmq
    depends_on:
      - redis
      - mongo
      - elasticmq
    ports:
      - "8080:8080"
    environment:
      - TZ=Asia/Tokyo
      - DB_URL=db
      - DB_USER_NAME=sa
      - DB_PASSWORD=123aBc678

  redis:
    container_name: redis-demo-dev
    image: "redis:latest"
    ports:
      - "6379:6379"
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - dev-redis-queue-data:/data:delegated
      - ./docker/redis/conf:/usr/local/etc/redis

  mongo:
    container_name: mongo-demo-dev
    image: "mongo:4.0.23"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: test
      MONGO_INITDB_DATABASE: mydb
    ports:
      - "27017:27017"
    volumes:
      - dev-mongo-data:/data:delegated

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: test
    depends_on:
      - mongo

  elasticmq:
    container_name: elasticmq-demo-dev
    image: softwaremill/elasticmq
    volumes:
      - ./docker/elasticmq/custom.conf://opt/elasticmq.conf:ro
    ports:
      - 9324:9324
      - 9325:9325


volumes:
  dev-redis-queue-data:
  dev-mongo-data:

networks:
  app-net:
    driver: bridge
